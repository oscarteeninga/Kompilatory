Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> CODE
Rule 1     CODE -> INSTRUCTIONS
Rule 2     INSTRUCTIONS -> { INSTRUCTIONS }
Rule 3     INSTRUCTIONS -> INSTRUCTION INSTRUCTIONS
Rule 4     INSTRUCTIONS -> INSTRUCTION
Rule 5     INSTRUCTION -> ASSIGN ;
Rule 6     INSTRUCTION -> IF_CONDITION
Rule 7     INSTRUCTION -> FOR_LOOP
Rule 8     INSTRUCTION -> WHILE_LOOP
Rule 9     INSTRUCTION -> CONTROL_INSTRUCTION ;
Rule 10    INSTRUCTION -> PRINT_CALL ;
Rule 11    ASSIGN -> ID ASSIGN_TYPE EXPRESSION
Rule 12    ASSIGN -> ID [ INTNUM ] ASSIGN_TYPE EXPRESSION
Rule 13    ASSIGN -> ID [ INTNUM , INTNUM ] ASSIGN_TYPE EXPRESSION
Rule 14    ASSIGN_TYPE -> =
Rule 15    ASSIGN_TYPE -> ADDASSIGN
Rule 16    ASSIGN_TYPE -> SUBASSIGN
Rule 17    ASSIGN_TYPE -> DIVASSIGN
Rule 18    ASSIGN_TYPE -> MULASSIGN
Rule 19    EXPRESSION -> BINARY_EXPRESSION
Rule 20    EXPRESSION -> LOGICAL_EXPRESSION
Rule 21    EXPRESSION -> MATRIX_EXPRESSION
Rule 22    EXPRESSION -> ( EXPRESSION )
Rule 23    EXPRESSION -> TERM
Rule 24    BINARY_EXPRESSION -> EXPRESSION + EXPRESSION
Rule 25    BINARY_EXPRESSION -> EXPRESSION - EXPRESSION
Rule 26    BINARY_EXPRESSION -> EXPRESSION * EXPRESSION
Rule 27    BINARY_EXPRESSION -> EXPRESSION / EXPRESSION
Rule 28    LOGICAL_EXPRESSION -> EXPRESSION > EXPRESSION
Rule 29    LOGICAL_EXPRESSION -> EXPRESSION < EXPRESSION
Rule 30    LOGICAL_EXPRESSION -> EXPRESSION EQORGT EXPRESSION
Rule 31    LOGICAL_EXPRESSION -> EXPRESSION EQORLESS EXPRESSION
Rule 32    LOGICAL_EXPRESSION -> EXPRESSION EQUAL EXPRESSION
Rule 33    LOGICAL_EXPRESSION -> EXPRESSION NOTEQUAL EXPRESSION
Rule 34    MATRIX_EXPRESSION -> EXPRESSION DOTADD EXPRESSION
Rule 35    MATRIX_EXPRESSION -> EXPRESSION DOTSUB EXPRESSION
Rule 36    MATRIX_EXPRESSION -> EXPRESSION DOTMUL EXPRESSION
Rule 37    MATRIX_EXPRESSION -> EXPRESSION DOTDIV EXPRESSION
Rule 38    TERM -> ID
Rule 39    TERM -> INTNUM
Rule 40    TERM -> FLOATNUM
Rule 41    TERM -> STRING
Rule 42    TERM -> MATRIX
Rule 43    TERM -> FUNCTION_CALL
Rule 44    TERM -> ID '
Rule 45    TERM -> - ID
Rule 46    MATRIX -> [ VECTORS ]
Rule 47    VECTORS -> VECTORS ; VECTOR
Rule 48    VECTORS -> VECTOR
Rule 49    VECTOR -> VECTOR , TERM
Rule 50    VECTOR -> TERM
Rule 51    FUNCTION_CALL -> FUNCTION_NAME ( TERM )
Rule 52    FUNCTION_NAME -> ZEROS
Rule 53    FUNCTION_NAME -> ONES
Rule 54    FUNCTION_NAME -> EYE
Rule 55    CONTROL_INSTRUCTION -> BREAK
Rule 56    CONTROL_INSTRUCTION -> CONTINUE
Rule 57    CONTROL_INSTRUCTION -> RETURN
Rule 58    CONTROL_INSTRUCTION -> RETURN EXPRESSION
Rule 59    PRINT_CALL -> PRINT PRINT_TERMS
Rule 60    PRINT_TERMS -> PRINT_TERMS , TERM
Rule 61    PRINT_TERMS -> TERM
Rule 62    IF_CONDITION -> IF ( LOGICAL_EXPRESSION ) INSTRUCTION ELIF_STATEMENTS ELSE_STATEMENT
Rule 63    IF_CONDITION -> IF ( LOGICAL_EXPRESSION ) { INSTRUCTIONS } ELIF_STATEMENTS ELSE_STATEMENT
Rule 64    ELIF_STATEMENTS -> ELSEIF ( LOGICAL_EXPRESSION ) INSTRUCTION ELIF_STATEMENTS
Rule 65    ELIF_STATEMENTS -> ELSEIF ( LOGICAL_EXPRESSION ) { INSTRUCTIONS } ELIF_STATEMENTS
Rule 66    ELIF_STATEMENTS -> ELSEIF ( LOGICAL_EXPRESSION ) INSTRUCTION
Rule 67    ELIF_STATEMENTS -> ELSEIF ( LOGICAL_EXPRESSION ) { INSTRUCTIONS }
Rule 68    ELSE_STATEMENT -> ELSE INSTRUCTION
Rule 69    ELSE_STATEMENT -> ELSE { INSTRUCTIONS }
Rule 70    ELSE_STATEMENT -> <empty>
Rule 71    FOR_LOOP -> FOR FOR_CONDITION { INSTRUCTIONS }
Rule 72    FOR_LOOP -> FOR FOR_CONDITION INSTRUCTION
Rule 73    FOR_CONDITION -> TERM = INTNUM_OR_ID : INTNUM_OR_ID
Rule 74    WHILE_LOOP -> WHILE ( LOGICAL_EXPRESSION ) { INSTRUCTIONS }
Rule 75    WHILE_LOOP -> WHILE ( LOGICAL_EXPRESSION ) INSTRUCTION

Terminals, with rules where they appear

'                    : 44
(                    : 22 51 62 63 64 65 66 67 74 75
)                    : 22 51 62 63 64 65 66 67 74 75
*                    : 26
+                    : 24
,                    : 13 49 60
-                    : 25 45
/                    : 27
:                    : 73
;                    : 5 9 10 47
<                    : 29
=                    : 14 73
>                    : 28
ADDASSIGN            : 15
BREAK                : 55
CONTINUE             : 56
DIVASSIGN            : 17
DOTADD               : 34
DOTDIV               : 37
DOTMUL               : 36
DOTSUB               : 35
ELSE                 : 68 69
ELSEIF               : 64 65 66 67
EQORGT               : 30
EQORLESS             : 31
EQUAL                : 32
EYE                  : 54
FLOATNUM             : 40
FOR                  : 71 72
ID                   : 11 12 13 38 44 45
IF                   : 62 63
INTNUM               : 12 13 13 39
MULASSIGN            : 18
NOTEQUAL             : 33
ONES                 : 53
PRINT                : 59
RETURN               : 57 58
STRING               : 41
SUBASSIGN            : 16
WHILE                : 74 75
ZEROS                : 52
[                    : 12 13 46
]                    : 12 13 46
error                : 
{                    : 2 63 65 67 69 71 74
}                    : 2 63 65 67 69 71 74

Nonterminals, with rules where they appear

ASSIGN               : 5
ASSIGN_TYPE          : 11 12 13
BINARY_EXPRESSION    : 19
CODE                 : 0
CONTROL_INSTRUCTION  : 9
ELIF_STATEMENTS      : 62 63 64 65
ELSE_STATEMENT       : 62 63
EXPRESSION           : 11 12 13 22 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 58
FOR_CONDITION        : 71 72
FOR_LOOP             : 7
FUNCTION_CALL        : 43
FUNCTION_NAME        : 51
IF_CONDITION         : 6
INSTRUCTION          : 3 4 62 64 66 68 72 75
INSTRUCTIONS         : 1 2 3 63 65 67 69 71 74
INTNUM_OR_ID         : 73 73
LOGICAL_EXPRESSION   : 20 62 63 64 65 66 67 74 75
MATRIX               : 42
MATRIX_EXPRESSION    : 21
PRINT_CALL           : 10
PRINT_TERMS          : 59 60
TERM                 : 23 49 50 51 60 61 73
VECTOR               : 47 48 49
VECTORS              : 46 47
WHILE_LOOP           : 8

