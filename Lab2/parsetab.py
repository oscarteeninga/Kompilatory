
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQORGT EQORLESS EQUAL EYE FLOATNUM FOR ID IF INTNUM MULASSIGN NOTEQUAL ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSEXPRESSION : TERM\n                  | EXPRESSION TERMTERM : STATEMENT\n            | PRINTVAR : NUM \n           | MATRIXNUM : INTNUM\n           | FLOATNUMVECTOR : VECTOR ',' NUM\n              | NUMVECTORS : VECTORS ';' VECTOR\n               | VECTORMATRIX : '[' VECTORS ']'MATRIX : ZEROS '(' INTNUM ')'MATRIX : ONES '(' INTNUM ')'MATRIX : EYE '(' INTNUM ')'MATRIX : '-' IDMATRIX : ID '\\''VAR : ID '+' IDVAR : ID '-' IDVAR : ID '*' IDVAR : ID '/' IDMATRIX : ID DOTADD IDMATRIX : ID DOTSUB IDMATRIX : ID DOTMUL IDMATRIX : ID DOTDIV IDSTATEMENT : ID '=' VAR ';'STATEMENT : ID '[' INTNUM ',' INTNUM ']' '=' NUM ';'STATEMENT : ID ADDASSIGN ID ';'STATEMENT : ID SUBASSIGN ID ';'STATEMENT : ID MULASSIGN ID ';'STATEMENT : ID DIVASSIGN ID ';'TERM : PRINT '(' ID ')' ';'TERM : PRINT '(' VAR ')' ';'"
    
_lr_action_items = {'PRINT':([0,1,2,3,4,6,50,52,53,54,55,56,65,81,],[4,4,-1,-3,-4,-2,-27,-29,-30,-31,-32,-33,-34,-28,]),'ID':([0,1,2,3,4,6,7,8,10,11,12,13,18,33,34,35,36,38,39,40,41,50,52,53,54,55,56,65,81,],[5,5,-1,-3,-4,-2,14,25,28,29,30,31,43,57,58,59,60,61,62,63,64,-27,-29,-30,-31,-32,-33,-34,-28,]),'$end':([1,2,3,4,6,50,52,53,54,55,56,65,81,],[0,-1,-3,-4,-2,-27,-29,-30,-31,-32,-33,-34,-28,]),'(':([4,22,23,24,],[7,47,48,49,]),'=':([5,78,],[8,79,]),'[':([5,7,8,],[9,21,21,]),'ADDASSIGN':([5,],[10,]),'SUBASSIGN':([5,],[11,]),'MULASSIGN':([5,],[12,]),'DIVASSIGN':([5,],[13,]),'INTNUM':([7,8,9,21,47,48,49,51,67,68,79,],[19,19,27,19,69,70,71,72,19,19,19,]),'FLOATNUM':([7,8,21,67,68,79,],[20,20,20,20,20,20,]),'ZEROS':([7,8,],[22,22,]),'ONES':([7,8,],[23,23,]),'EYE':([7,8,],[24,24,]),'-':([7,8,14,25,],[18,18,34,34,]),')':([14,15,16,17,19,20,37,43,57,58,59,60,61,62,63,64,66,69,70,71,75,76,77,],[32,42,-5,-6,-7,-8,-18,-17,-19,-20,-21,-22,-23,-24,-25,-26,-13,75,76,77,-14,-15,-16,]),'+':([14,25,],[33,33,]),'*':([14,25,],[35,35,]),'/':([14,25,],[36,36,]),"'":([14,25,],[37,37,]),'DOTADD':([14,25,],[38,38,]),'DOTSUB':([14,25,],[39,39,]),'DOTMUL':([14,25,],[40,40,]),'DOTDIV':([14,25,],[41,41,]),';':([16,17,19,20,26,28,29,30,31,32,37,42,43,44,45,46,57,58,59,60,61,62,63,64,66,73,74,75,76,77,80,],[-5,-6,-7,-8,50,52,53,54,55,56,-18,65,-17,67,-12,-10,-19,-20,-21,-22,-23,-24,-25,-26,-13,-11,-9,-14,-15,-16,81,]),',':([19,20,27,45,46,73,74,],[-7,-8,51,68,-10,68,-9,]),']':([19,20,44,45,46,72,73,74,],[-7,-8,66,-12,-10,78,-11,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'EXPRESSION':([0,],[1,]),'TERM':([0,1,],[2,6,]),'STATEMENT':([0,1,],[3,3,]),'VAR':([7,8,],[15,26,]),'NUM':([7,8,21,67,68,79,],[16,16,46,46,74,80,]),'MATRIX':([7,8,],[17,17,]),'VECTORS':([21,],[44,]),'VECTOR':([21,67,],[45,73,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> EXPRESSION","S'",1,None,None,None),
  ('EXPRESSION -> TERM','EXPRESSION',1,'p_expression_statement','parser.py',21),
  ('EXPRESSION -> EXPRESSION TERM','EXPRESSION',2,'p_expression_statement','parser.py',22),
  ('TERM -> STATEMENT','TERM',1,'p_term','parser.py',26),
  ('TERM -> PRINT','TERM',1,'p_term','parser.py',27),
  ('VAR -> NUM','VAR',1,'p_var','parser.py',31),
  ('VAR -> MATRIX','VAR',1,'p_var','parser.py',32),
  ('NUM -> INTNUM','NUM',1,'p_num','parser.py',36),
  ('NUM -> FLOATNUM','NUM',1,'p_num','parser.py',37),
  ('VECTOR -> VECTOR , NUM','VECTOR',3,'p_vector','parser.py',41),
  ('VECTOR -> NUM','VECTOR',1,'p_vector','parser.py',42),
  ('VECTORS -> VECTORS ; VECTOR','VECTORS',3,'p_vectors','parser.py',47),
  ('VECTORS -> VECTOR','VECTORS',1,'p_vectors','parser.py',48),
  ('MATRIX -> [ VECTORS ]','MATRIX',3,'p_matrix','parser.py',53),
  ('MATRIX -> ZEROS ( INTNUM )','MATRIX',4,'p_zeros','parser.py',65),
  ('MATRIX -> ONES ( INTNUM )','MATRIX',4,'p_ones','parser.py',69),
  ('MATRIX -> EYE ( INTNUM )','MATRIX',4,'p_eye','parser.py',73),
  ('MATRIX -> - ID','MATRIX',2,'p_matrix_min','parser.py',77),
  ("MATRIX -> ID '",'MATRIX',2,'p_matrix_trans','parser.py',81),
  ('VAR -> ID + ID','VAR',3,'p_sum','parser.py',85),
  ('VAR -> ID - ID','VAR',3,'p_sub','parser.py',89),
  ('VAR -> ID * ID','VAR',3,'p_mul','parser.py',93),
  ('VAR -> ID / ID','VAR',3,'p_div','parser.py',97),
  ('MATRIX -> ID DOTADD ID','MATRIX',3,'p_dotadd','parser.py',101),
  ('MATRIX -> ID DOTSUB ID','MATRIX',3,'p_dotsub','parser.py',105),
  ('MATRIX -> ID DOTMUL ID','MATRIX',3,'p_dotmul','parser.py',109),
  ('MATRIX -> ID DOTDIV ID','MATRIX',3,'p_dotdiv','parser.py',113),
  ('STATEMENT -> ID = VAR ;','STATEMENT',4,'p_var_statement_assignment','parser.py',117),
  ('STATEMENT -> ID [ INTNUM , INTNUM ] = NUM ;','STATEMENT',9,'p_matrix_element_assignment','parser.py',123),
  ('STATEMENT -> ID ADDASSIGN ID ;','STATEMENT',4,'p_addassign','parser.py',128),
  ('STATEMENT -> ID SUBASSIGN ID ;','STATEMENT',4,'p_subassign','parser.py',133),
  ('STATEMENT -> ID MULASSIGN ID ;','STATEMENT',4,'p_mulassign','parser.py',138),
  ('STATEMENT -> ID DIVASSIGN ID ;','STATEMENT',4,'p_divassign','parser.py',143),
  ('TERM -> PRINT ( ID ) ;','TERM',5,'p_print_id','parser.py',148),
  ('TERM -> PRINT ( VAR ) ;','TERM',5,'p_print_var','parser.py',152),
]
