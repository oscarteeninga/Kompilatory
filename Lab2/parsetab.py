
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE ELSEIF EQORGT EQORLESS EQUAL EYE FLOATNUM FOR ID IF INTNUM MULASSIGN NOTEQUAL ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSEXPRESSION : TERM\n                  | EXPRESSION TERM\n                  | EXPRESSION IF_CONDITIONTERM : STATEMENT\n            | PRINTVAR : NUM\n           | MATRIXNUM : INTNUM\n           | FLOATNUMVECTOR : VECTOR ',' NUM\n              | NUMVECTORS : VECTORS ';' VECTOR\n               | VECTORMATRIX : '[' VECTORS ']'MATRIX : ZEROS '(' INTNUM ')'MATRIX : ONES '(' INTNUM ')'MATRIX : EYE '(' INTNUM ')'MATRIX : '-' IDMATRIX : ID '\\''VAR : ID '+' IDVAR : ID '-' IDVAR : ID '*' IDVAR : ID '/' IDMATRIX : ID DOTADD IDMATRIX : ID DOTSUB IDMATRIX : ID DOTMUL IDMATRIX : ID DOTDIV IDSTATEMENT : ID '=' VAR ';'STATEMENT : ID '[' INTNUM ',' INTNUM ']' '=' NUM ';'STATEMENT : ID ADDASSIGN ID ';'STATEMENT : ID SUBASSIGN ID ';'STATEMENT : ID MULASSIGN ID ';'STATEMENT : ID DIVASSIGN ID ';'TERM : PRINT '(' ID ')' ';'TERM : PRINT '(' VAR ')' ';'TERM : PRINT '(' STRING ')' ';'\n    IF_CONDITION   : IF '(' LOGICAL_EXPRESSION ')' EXPRESSION ELSE_STATEMENT\n    ELSE_STATEMENT : ELSE EXPRESSION\n                   |\n    LOGICAL_EXPRESSION : ID EQUAL INTNUM"
    
_lr_action_items = {'PRINT':([0,1,2,3,4,6,7,57,59,60,61,62,63,65,74,75,83,91,92,94,96,],[4,4,-1,-4,-5,-2,-3,-28,-30,-31,-32,-33,4,-34,-35,-36,4,-37,4,4,-29,]),'ID':([0,1,2,3,4,6,7,9,10,12,13,14,15,16,22,39,40,41,42,44,45,46,47,57,59,60,61,62,63,65,74,75,83,91,92,94,96,],[5,5,-1,-4,-5,-2,-3,17,29,32,33,34,35,37,50,66,67,68,69,70,71,72,73,-28,-30,-31,-32,-33,5,-34,-35,-36,5,-37,5,5,-29,]),'$end':([1,2,3,4,6,7,57,59,60,61,62,65,74,75,83,91,94,96,],[0,-1,-4,-5,-2,-3,-28,-30,-31,-32,-33,-34,-35,-36,-39,-37,-38,-29,]),'IF':([1,2,3,4,6,7,57,59,60,61,62,65,74,75,83,91,94,96,],[8,-1,-4,-5,-2,-3,-28,-30,-31,-32,-33,-34,-35,-36,8,-37,8,-29,]),'ELSE':([2,3,4,6,7,57,59,60,61,62,65,74,75,83,91,94,96,],[-1,-4,-5,-2,-3,-28,-30,-31,-32,-33,-34,-35,-36,92,-37,-38,-29,]),'(':([4,8,26,27,28,],[9,16,54,55,56,]),'=':([5,90,],[10,93,]),'[':([5,9,10,],[11,25,25,]),'ADDASSIGN':([5,],[12,]),'SUBASSIGN':([5,],[13,]),'MULASSIGN':([5,],[14,]),'DIVASSIGN':([5,],[15,]),'STRING':([9,],[19,]),'INTNUM':([9,10,11,25,54,55,56,58,64,77,78,93,],[23,23,31,23,79,80,81,82,84,23,23,23,]),'FLOATNUM':([9,10,25,77,78,93,],[24,24,24,24,24,24,]),'ZEROS':([9,10,],[26,26,]),'ONES':([9,10,],[27,27,]),'EYE':([9,10,],[28,28,]),'-':([9,10,17,29,],[22,22,40,40,]),')':([17,18,19,20,21,23,24,36,43,50,66,67,68,69,70,71,72,73,76,79,80,81,84,87,88,89,],[38,48,49,-6,-7,-8,-9,63,-19,-18,-20,-21,-22,-23,-24,-25,-26,-27,-14,87,88,89,-40,-15,-16,-17,]),'+':([17,29,],[39,39,]),'*':([17,29,],[41,41,]),'/':([17,29,],[42,42,]),"'":([17,29,],[43,43,]),'DOTADD':([17,29,],[44,44,]),'DOTSUB':([17,29,],[45,45,]),'DOTMUL':([17,29,],[46,46,]),'DOTDIV':([17,29,],[47,47,]),';':([20,21,23,24,30,32,33,34,35,38,43,48,49,50,51,52,53,66,67,68,69,70,71,72,73,76,85,86,87,88,89,95,],[-6,-7,-8,-9,57,59,60,61,62,65,-19,74,75,-18,77,-13,-11,-20,-21,-22,-23,-24,-25,-26,-27,-14,-12,-10,-15,-16,-17,96,]),',':([23,24,31,52,53,85,86,],[-8,-9,58,78,-11,78,-10,]),']':([23,24,51,52,53,82,85,86,],[-8,-9,76,-13,-11,90,-12,-10,]),'EQUAL':([37,],[64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'EXPRESSION':([0,63,92,],[1,83,94,]),'TERM':([0,1,63,83,92,94,],[2,6,2,6,2,6,]),'STATEMENT':([0,1,63,83,92,94,],[3,3,3,3,3,3,]),'IF_CONDITION':([1,83,94,],[7,7,7,]),'VAR':([9,10,],[18,30,]),'NUM':([9,10,25,77,78,93,],[20,20,53,53,86,95,]),'MATRIX':([9,10,],[21,21,]),'LOGICAL_EXPRESSION':([16,],[36,]),'VECTORS':([25,],[51,]),'VECTOR':([25,77,],[52,85,]),'ELSE_STATEMENT':([83,],[91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> EXPRESSION","S'",1,None,None,None),
  ('EXPRESSION -> TERM','EXPRESSION',1,'p_expression_statement','parser.py',36),
  ('EXPRESSION -> EXPRESSION TERM','EXPRESSION',2,'p_expression_statement','parser.py',37),
  ('EXPRESSION -> EXPRESSION IF_CONDITION','EXPRESSION',2,'p_expression_statement','parser.py',38),
  ('TERM -> STATEMENT','TERM',1,'p_term','parser.py',43),
  ('TERM -> PRINT','TERM',1,'p_term','parser.py',44),
  ('VAR -> NUM','VAR',1,'p_var','parser.py',49),
  ('VAR -> MATRIX','VAR',1,'p_var','parser.py',50),
  ('NUM -> INTNUM','NUM',1,'p_num','parser.py',55),
  ('NUM -> FLOATNUM','NUM',1,'p_num','parser.py',56),
  ('VECTOR -> VECTOR , NUM','VECTOR',3,'p_vector','parser.py',61),
  ('VECTOR -> NUM','VECTOR',1,'p_vector','parser.py',62),
  ('VECTORS -> VECTORS ; VECTOR','VECTORS',3,'p_vectors','parser.py',70),
  ('VECTORS -> VECTOR','VECTORS',1,'p_vectors','parser.py',71),
  ('MATRIX -> [ VECTORS ]','MATRIX',3,'p_matrix','parser.py',79),
  ('MATRIX -> ZEROS ( INTNUM )','MATRIX',4,'p_zeros','parser.py',91),
  ('MATRIX -> ONES ( INTNUM )','MATRIX',4,'p_ones','parser.py',96),
  ('MATRIX -> EYE ( INTNUM )','MATRIX',4,'p_eye','parser.py',101),
  ('MATRIX -> - ID','MATRIX',2,'p_matrix_min','parser.py',106),
  ("MATRIX -> ID '",'MATRIX',2,'p_matrix_trans','parser.py',111),
  ('VAR -> ID + ID','VAR',3,'p_sum','parser.py',116),
  ('VAR -> ID - ID','VAR',3,'p_sub','parser.py',121),
  ('VAR -> ID * ID','VAR',3,'p_mul','parser.py',126),
  ('VAR -> ID / ID','VAR',3,'p_div','parser.py',131),
  ('MATRIX -> ID DOTADD ID','MATRIX',3,'p_dotadd','parser.py',136),
  ('MATRIX -> ID DOTSUB ID','MATRIX',3,'p_dotsub','parser.py',141),
  ('MATRIX -> ID DOTMUL ID','MATRIX',3,'p_dotmul','parser.py',146),
  ('MATRIX -> ID DOTDIV ID','MATRIX',3,'p_dotdiv','parser.py',151),
  ('STATEMENT -> ID = VAR ;','STATEMENT',4,'p_var_statement_assignment','parser.py',156),
  ('STATEMENT -> ID [ INTNUM , INTNUM ] = NUM ;','STATEMENT',9,'p_matrix_element_assignment','parser.py',162),
  ('STATEMENT -> ID ADDASSIGN ID ;','STATEMENT',4,'p_addassign','parser.py',167),
  ('STATEMENT -> ID SUBASSIGN ID ;','STATEMENT',4,'p_subassign','parser.py',172),
  ('STATEMENT -> ID MULASSIGN ID ;','STATEMENT',4,'p_mulassign','parser.py',177),
  ('STATEMENT -> ID DIVASSIGN ID ;','STATEMENT',4,'p_divassign','parser.py',182),
  ('TERM -> PRINT ( ID ) ;','TERM',5,'p_print_id','parser.py',187),
  ('TERM -> PRINT ( VAR ) ;','TERM',5,'p_print_var','parser.py',192),
  ('TERM -> PRINT ( STRING ) ;','TERM',5,'p_print_string','parser.py',197),
  ('IF_CONDITION -> IF ( LOGICAL_EXPRESSION ) EXPRESSION ELSE_STATEMENT','IF_CONDITION',6,'p_if_condition','parser.py',203),
  ('ELSE_STATEMENT -> ELSE EXPRESSION','ELSE_STATEMENT',2,'p_if_condition','parser.py',204),
  ('ELSE_STATEMENT -> <empty>','ELSE_STATEMENT',0,'p_if_condition','parser.py',205),
  ('LOGICAL_EXPRESSION -> ID EQUAL INTNUM','LOGICAL_EXPRESSION',3,'p_logical_expression','parser.py',214),
]
