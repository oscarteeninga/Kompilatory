
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE ELSEIF EQORGT EQORLESS EQUAL EYE FLOATNUM FOR ID IF INTNUM MULASSIGN NOTEQUAL ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROS\n    CODE : INSTRUCTIONS\n    \n    INSTRUCTIONS : \'{\' INSTRUCTIONS \'}\'\n                | INSTRUCTION INSTRUCTIONS\n                | INSTRUCTION\n    \n    INSTRUCTION : ASSIGN \';\'\n                | IF_CONDITION\n                | FOR_LOOP\n                | WHILE_LOOP\n                | CONTROL_INSTRUCTION \';\'\n                | PRINT_CALL \';\'\n    \n    ASSIGN : ID ASSIGN_TYPE EXPRESSION\n           | ID \'[\' INTNUM \']\' ASSIGN_TYPE EXPRESSION\n           | ID \'[\' INTNUM \',\' INTNUM \']\' ASSIGN_TYPE EXPRESSION\n    \n    ASSIGN_TYPE : \'=\'\n                | ADDASSIGN\n                | SUBASSIGN\n                | DIVASSIGN\n                | MULASSIGN\n    \n    EXPRESSION : BINARY_EXPRESSION\n               | LOGICAL_EXPRESSION\n               | MATRIX_EXPRESSION\n               | \'(\' EXPRESSION \')\'\n               | TERM\n    \n    BINARY_EXPRESSION : EXPRESSION \'+\' EXPRESSION\n                      | EXPRESSION \'-\' EXPRESSION\n                      | EXPRESSION \'*\' EXPRESSION\n                      | EXPRESSION \'/\' EXPRESSION\n    \n    LOGICAL_EXPRESSION : EXPRESSION \'>\' EXPRESSION\n                      | EXPRESSION \'<\' EXPRESSION\n                      | EXPRESSION EQORGT EXPRESSION\n                      | EXPRESSION EQORLESS EXPRESSION\n                      | EXPRESSION EQUAL EXPRESSION\n                      | EXPRESSION NOTEQUAL EXPRESSION\n    \n    MATRIX_EXPRESSION : EXPRESSION DOTADD EXPRESSION\n                      | EXPRESSION DOTSUB EXPRESSION\n                      | EXPRESSION DOTMUL EXPRESSION\n                      | EXPRESSION DOTDIV EXPRESSION\n    \n    TERM : ID\n         | INTNUM\n         | FLOATNUM\n         | STRING\n         | MATRIX\n         | FUNCTION_CALL\n         | TERM "\'"\n         | \'-\' TERM\n    \n    INTNUM_OR_ID : INTNUM\n                 | ID\n    \n    MATRIX : \'[\' VECTORS \']\'\n    \n    VECTORS : VECTORS \';\' VECTOR\n            | VECTOR\n    \n    VECTOR : VECTOR \',\' TERM\n           | TERM\n    \n    FUNCTION_CALL : FUNCTION_NAME \'(\' TERM \')\'\n    \n    FUNCTION_NAME : ZEROS\n                  | ONES\n                  | EYE\n    \n    CONTROL_INSTRUCTION : BREAK\n                        | CONTINUE\n                        | RETURN\n                        | RETURN TERM\n    \n    PRINT_CALL : PRINT PRINT_TERMS\n    \n    PRINT_TERMS : PRINT_TERMS \',\' TERM\n                | TERM\n    \n    IF_CONDITION    : IF \'(\' LOGICAL_EXPRESSION \')\' INSTRUCTION ELIF_STATEMENTS ELSE_STATEMENT\n                    | IF \'(\' LOGICAL_EXPRESSION \')\' \'{\' INSTRUCTIONS \'}\' ELIF_STATEMENTS ELSE_STATEMENT\n    ELIF_STATEMENTS : ELSEIF \'(\' LOGICAL_EXPRESSION \')\' INSTRUCTION ELIF_STATEMENTS\n                    | ELSEIF \'(\' LOGICAL_EXPRESSION \')\' \'{\' INSTRUCTIONS \'}\' ELIF_STATEMENTS\n                    | ELSEIF \'(\' LOGICAL_EXPRESSION \')\' INSTRUCTION\n                    | ELSEIF \'(\' LOGICAL_EXPRESSION \')\' \'{\' INSTRUCTIONS \'}\'\n    ELSE_STATEMENT  : ELSE INSTRUCTION\n                    | ELSE \'{\' INSTRUCTIONS \'}\'\n                    |\n    \n    FOR_LOOP : FOR FOR_CONDITION \'{\' INSTRUCTIONS \'}\'\n             | FOR FOR_CONDITION  INSTRUCTION\n    \n    FOR_CONDITION : ID \'=\' INTNUM_OR_ID \':\' INTNUM_OR_ID\n    \n    WHILE_LOOP : WHILE \'(\' LOGICAL_EXPRESSION \')\' \'{\' INSTRUCTIONS \'}\'\n               | WHILE \'(\' LOGICAL_EXPRESSION \')\' INSTRUCTION\n    '
    
_lr_action_items = {'{':([0,3,4,6,7,8,21,22,23,32,60,61,88,90,92,93,117,118,120,121,127,130,133,134,137,139,140,142,144,145,146,147,148,149,151,152,],[3,3,3,-6,-7,-8,-5,-9,-10,60,3,-74,117,-47,-46,120,3,-73,3,-77,-72,-75,-64,140,-76,-70,3,-72,148,-65,-71,-68,3,-66,-69,-67,]),'ID':([0,3,4,6,7,8,13,17,18,21,22,23,24,26,27,28,29,30,31,32,34,42,43,55,60,61,62,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,90,92,93,95,96,114,117,118,119,120,121,127,130,132,133,134,135,137,139,140,142,144,145,146,147,148,149,151,152,],[11,11,11,-6,-7,-8,33,36,36,-5,-9,-10,36,-14,-15,-16,-17,-18,36,11,36,36,36,36,11,-74,90,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,-47,-46,11,36,36,36,11,-73,90,11,-77,-72,-75,36,-64,11,36,-76,-70,11,-72,11,-65,-71,-68,11,-66,-69,-67,]),'IF':([0,3,4,6,7,8,21,22,23,32,60,61,88,90,92,93,117,118,120,121,127,130,133,134,137,139,140,142,144,145,146,147,148,149,151,152,],[12,12,12,-6,-7,-8,-5,-9,-10,12,12,-74,12,-47,-46,12,12,-73,12,-77,-72,-75,-64,12,-76,-70,12,-72,12,-65,-71,-68,12,-66,-69,-67,]),'FOR':([0,3,4,6,7,8,21,22,23,32,60,61,88,90,92,93,117,118,120,121,127,130,133,134,137,139,140,142,144,145,146,147,148,149,151,152,],[13,13,13,-6,-7,-8,-5,-9,-10,13,13,-74,13,-47,-46,13,13,-73,13,-77,-72,-75,-64,13,-76,-70,13,-72,13,-65,-71,-68,13,-66,-69,-67,]),'WHILE':([0,3,4,6,7,8,21,22,23,32,60,61,88,90,92,93,117,118,120,121,127,130,133,134,137,139,140,142,144,145,146,147,148,149,151,152,],[14,14,14,-6,-7,-8,-5,-9,-10,14,14,-74,14,-47,-46,14,14,-73,14,-77,-72,-75,-64,14,-76,-70,14,-72,14,-65,-71,-68,14,-66,-69,-67,]),'BREAK':([0,3,4,6,7,8,21,22,23,32,60,61,88,90,92,93,117,118,120,121,127,130,133,134,137,139,140,142,144,145,146,147,148,149,151,152,],[15,15,15,-6,-7,-8,-5,-9,-10,15,15,-74,15,-47,-46,15,15,-73,15,-77,-72,-75,-64,15,-76,-70,15,-72,15,-65,-71,-68,15,-66,-69,-67,]),'CONTINUE':([0,3,4,6,7,8,21,22,23,32,60,61,88,90,92,93,117,118,120,121,127,130,133,134,137,139,140,142,144,145,146,147,148,149,151,152,],[16,16,16,-6,-7,-8,-5,-9,-10,16,16,-74,16,-47,-46,16,16,-73,16,-77,-72,-75,-64,16,-76,-70,16,-72,16,-65,-71,-68,16,-66,-69,-67,]),'RETURN':([0,3,4,6,7,8,21,22,23,32,60,61,88,90,92,93,117,118,120,121,127,130,133,134,137,139,140,142,144,145,146,147,148,149,151,152,],[17,17,17,-6,-7,-8,-5,-9,-10,17,17,-74,17,-47,-46,17,17,-73,17,-77,-72,-75,-64,17,-76,-70,17,-72,17,-65,-71,-68,17,-66,-69,-67,]),'PRINT':([0,3,4,6,7,8,21,22,23,32,60,61,88,90,92,93,117,118,120,121,127,130,133,134,137,139,140,142,144,145,146,147,148,149,151,152,],[18,18,18,-6,-7,-8,-5,-9,-10,18,18,-74,18,-47,-46,18,18,-73,18,-77,-72,-75,-64,18,-76,-70,18,-72,18,-65,-71,-68,18,-66,-69,-67,]),'$end':([1,2,4,6,7,8,20,21,22,23,50,61,118,121,127,133,137,139,142,145,146,147,149,151,152,],[0,-1,-4,-6,-7,-8,-3,-5,-9,-10,-2,-74,-73,-77,-72,-64,-76,-70,-72,-65,-71,-68,-66,-69,-67,]),'}':([4,6,7,8,19,20,21,22,23,50,61,89,118,121,127,129,131,133,137,139,142,143,145,146,147,149,150,151,152,],[-4,-6,-7,-8,50,-3,-5,-9,-10,-2,-74,118,-73,-77,-72,136,137,-64,-76,-70,-72,146,-65,-71,-68,-66,151,-69,-67,]),';':([5,9,10,15,16,17,35,36,37,38,39,40,41,48,49,51,52,53,54,56,64,65,66,67,68,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,123,124,125,138,],[21,22,23,-57,-58,-59,-60,-38,-39,-40,-41,-42,-43,-61,-63,-11,-19,-20,-21,-23,-44,-45,95,-50,-52,-48,-62,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-22,-49,-51,-53,-12,-13,]),'ELSEIF':([6,7,8,21,22,23,61,116,118,121,127,133,136,137,139,142,145,146,147,149,151,152,],[-6,-7,-8,-5,-9,-10,-74,128,-73,-77,-72,-64,128,-76,-70,-72,-65,-71,128,-66,128,-67,]),'ELSE':([6,7,8,21,22,23,61,118,121,127,133,137,139,142,145,146,147,149,151,152,],[-6,-7,-8,-5,-9,-10,-74,-73,-77,134,-64,-76,-70,134,-65,-71,-68,-66,-69,-67,]),'[':([11,17,18,24,26,27,28,29,30,31,34,42,43,55,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,95,96,114,132,135,],[25,43,43,43,-14,-15,-16,-17,-18,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'=':([11,33,86,126,],[26,62,26,26,]),'ADDASSIGN':([11,86,126,],[27,27,27,]),'SUBASSIGN':([11,86,126,],[28,28,28,]),'DIVASSIGN':([11,86,126,],[29,29,29,]),'MULASSIGN':([11,86,126,],[30,30,30,]),'(':([12,14,24,26,27,28,29,30,31,34,44,45,46,47,55,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,128,132,135,],[31,34,55,-14,-15,-16,-17,-18,55,55,69,-54,-55,-56,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,135,55,55,]),'INTNUM':([17,18,24,25,26,27,28,29,30,31,34,42,43,55,62,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,95,96,114,119,132,135,],[37,37,37,57,-14,-15,-16,-17,-18,37,37,37,37,37,92,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,115,37,37,37,92,37,37,]),'FLOATNUM':([17,18,24,26,27,28,29,30,31,34,42,43,55,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,95,96,114,132,135,],[38,38,38,-14,-15,-16,-17,-18,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'STRING':([17,18,24,26,27,28,29,30,31,34,42,43,55,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,95,96,114,132,135,],[39,39,39,-14,-15,-16,-17,-18,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'-':([17,18,24,26,27,28,29,30,31,34,36,37,38,39,40,41,42,43,51,52,53,54,55,56,58,59,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,124,125,132,135,138,141,],[42,42,42,-14,-15,-16,-17,-18,42,42,-38,-39,-40,-41,-42,-43,42,42,72,-19,-20,-21,42,-23,-20,72,-20,-44,-45,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,72,-48,42,42,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-22,42,-53,72,42,42,72,-20,]),'ZEROS':([17,18,24,26,27,28,29,30,31,34,42,43,55,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,95,96,114,132,135,],[45,45,45,-14,-15,-16,-17,-18,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'ONES':([17,18,24,26,27,28,29,30,31,34,42,43,55,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,95,96,114,132,135,],[46,46,46,-14,-15,-16,-17,-18,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'EYE':([17,18,24,26,27,28,29,30,31,34,42,43,55,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,95,96,114,132,135,],[47,47,47,-14,-15,-16,-17,-18,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),"'":([35,36,37,38,39,40,41,49,56,64,65,68,94,97,98,123,124,],[64,-38,-39,-40,-41,-42,-43,64,64,-44,64,64,-48,64,64,64,-53,]),',':([36,37,38,39,40,41,48,49,57,64,65,67,68,94,98,122,123,124,],[-38,-39,-40,-41,-42,-43,70,-63,87,-44,-45,96,-52,-48,-62,96,-51,-53,]),'+':([36,37,38,39,40,41,51,52,53,54,56,58,59,63,64,65,85,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,125,138,141,],[-38,-39,-40,-41,-42,-43,71,-19,-20,-21,-23,-20,71,-20,-44,-45,71,-48,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-22,-53,71,71,-20,]),'*':([36,37,38,39,40,41,51,52,53,54,56,58,59,63,64,65,85,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,125,138,141,],[-38,-39,-40,-41,-42,-43,73,-19,-20,-21,-23,-20,73,-20,-44,-45,73,-48,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-22,-53,73,73,-20,]),'/':([36,37,38,39,40,41,51,52,53,54,56,58,59,63,64,65,85,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,125,138,141,],[-38,-39,-40,-41,-42,-43,74,-19,-20,-21,-23,-20,74,-20,-44,-45,74,-48,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-22,-53,74,74,-20,]),'>':([36,37,38,39,40,41,51,52,53,54,56,58,59,63,64,65,85,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,125,138,141,],[-38,-39,-40,-41,-42,-43,75,-19,-20,-21,-23,-20,75,-20,-44,-45,75,-48,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-22,-53,75,75,-20,]),'<':([36,37,38,39,40,41,51,52,53,54,56,58,59,63,64,65,85,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,125,138,141,],[-38,-39,-40,-41,-42,-43,76,-19,-20,-21,-23,-20,76,-20,-44,-45,76,-48,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-22,-53,76,76,-20,]),'EQORGT':([36,37,38,39,40,41,51,52,53,54,56,58,59,63,64,65,85,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,125,138,141,],[-38,-39,-40,-41,-42,-43,77,-19,-20,-21,-23,-20,77,-20,-44,-45,77,-48,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-22,-53,77,77,-20,]),'EQORLESS':([36,37,38,39,40,41,51,52,53,54,56,58,59,63,64,65,85,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,125,138,141,],[-38,-39,-40,-41,-42,-43,78,-19,-20,-21,-23,-20,78,-20,-44,-45,78,-48,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-22,-53,78,78,-20,]),'EQUAL':([36,37,38,39,40,41,51,52,53,54,56,58,59,63,64,65,85,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,125,138,141,],[-38,-39,-40,-41,-42,-43,79,-19,-20,-21,-23,-20,79,-20,-44,-45,79,-48,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-22,-53,79,79,-20,]),'NOTEQUAL':([36,37,38,39,40,41,51,52,53,54,56,58,59,63,64,65,85,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,125,138,141,],[-38,-39,-40,-41,-42,-43,80,-19,-20,-21,-23,-20,80,-20,-44,-45,80,-48,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-22,-53,80,80,-20,]),'DOTADD':([36,37,38,39,40,41,51,52,53,54,56,58,59,63,64,65,85,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,125,138,141,],[-38,-39,-40,-41,-42,-43,81,-19,-20,-21,-23,-20,81,-20,-44,-45,81,-48,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-22,-53,81,81,-20,]),'DOTSUB':([36,37,38,39,40,41,51,52,53,54,56,58,59,63,64,65,85,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,125,138,141,],[-38,-39,-40,-41,-42,-43,82,-19,-20,-21,-23,-20,82,-20,-44,-45,82,-48,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-22,-53,82,82,-20,]),'DOTMUL':([36,37,38,39,40,41,51,52,53,54,56,58,59,63,64,65,85,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,125,138,141,],[-38,-39,-40,-41,-42,-43,83,-19,-20,-21,-23,-20,83,-20,-44,-45,83,-48,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-22,-53,83,83,-20,]),'DOTDIV':([36,37,38,39,40,41,51,52,53,54,56,58,59,63,64,65,85,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,125,138,141,],[-38,-39,-40,-41,-42,-43,84,-19,-20,-21,-23,-20,84,-20,-44,-45,84,-48,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-22,-53,84,84,-20,]),']':([36,37,38,39,40,41,57,64,65,66,67,68,94,115,122,123,124,],[-38,-39,-40,-41,-42,-43,86,-44,-45,94,-50,-52,-48,126,-49,-51,-53,]),')':([36,37,38,39,40,41,52,53,54,56,58,63,64,65,85,94,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,141,],[-38,-39,-40,-41,-42,-43,-19,-20,-21,-23,88,93,-44,-45,113,-48,124,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-22,-53,144,]),':':([90,91,92,],[-47,119,-46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CODE':([0,],[1,]),'INSTRUCTIONS':([0,3,4,60,117,120,140,148,],[2,19,20,89,129,131,143,150,]),'INSTRUCTION':([0,3,4,32,60,88,93,117,120,134,140,144,148,],[4,4,4,61,4,116,121,4,4,139,4,147,4,]),'ASSIGN':([0,3,4,32,60,88,93,117,120,134,140,144,148,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'IF_CONDITION':([0,3,4,32,60,88,93,117,120,134,140,144,148,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'FOR_LOOP':([0,3,4,32,60,88,93,117,120,134,140,144,148,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'WHILE_LOOP':([0,3,4,32,60,88,93,117,120,134,140,144,148,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'CONTROL_INSTRUCTION':([0,3,4,32,60,88,93,117,120,134,140,144,148,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'PRINT_CALL':([0,3,4,32,60,88,93,117,120,134,140,144,148,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'ASSIGN_TYPE':([11,86,126,],[24,114,132,]),'FOR_CONDITION':([13,],[32,]),'TERM':([17,18,24,31,34,42,43,55,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,95,96,114,132,135,],[35,49,56,56,56,65,68,56,97,98,56,56,56,56,56,56,56,56,56,56,56,56,56,56,68,123,56,56,56,]),'MATRIX':([17,18,24,31,34,42,43,55,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,95,96,114,132,135,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'FUNCTION_CALL':([17,18,24,31,34,42,43,55,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,95,96,114,132,135,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'FUNCTION_NAME':([17,18,24,31,34,42,43,55,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,95,96,114,132,135,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'PRINT_TERMS':([18,],[48,]),'EXPRESSION':([24,31,34,55,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,132,135,],[51,59,59,85,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,138,59,]),'BINARY_EXPRESSION':([24,31,34,55,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,132,135,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'LOGICAL_EXPRESSION':([24,31,34,55,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,132,135,],[53,58,63,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,141,]),'MATRIX_EXPRESSION':([24,31,34,55,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,132,135,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'VECTORS':([43,],[66,]),'VECTOR':([43,95,],[67,122,]),'INTNUM_OR_ID':([62,119,],[91,130,]),'ELIF_STATEMENTS':([116,136,147,151,],[127,142,149,152,]),'ELSE_STATEMENT':([127,142,],[133,145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CODE","S'",1,None,None,None),
  ('CODE -> INSTRUCTIONS','CODE',1,'p_code','parser.py',21),
  ('INSTRUCTIONS -> { INSTRUCTIONS }','INSTRUCTIONS',3,'p_instructions','parser.py',40),
  ('INSTRUCTIONS -> INSTRUCTION INSTRUCTIONS','INSTRUCTIONS',2,'p_instructions','parser.py',41),
  ('INSTRUCTIONS -> INSTRUCTION','INSTRUCTIONS',1,'p_instructions','parser.py',42),
  ('INSTRUCTION -> ASSIGN ;','INSTRUCTION',2,'p_instruction','parser.py',54),
  ('INSTRUCTION -> IF_CONDITION','INSTRUCTION',1,'p_instruction','parser.py',55),
  ('INSTRUCTION -> FOR_LOOP','INSTRUCTION',1,'p_instruction','parser.py',56),
  ('INSTRUCTION -> WHILE_LOOP','INSTRUCTION',1,'p_instruction','parser.py',57),
  ('INSTRUCTION -> CONTROL_INSTRUCTION ;','INSTRUCTION',2,'p_instruction','parser.py',58),
  ('INSTRUCTION -> PRINT_CALL ;','INSTRUCTION',2,'p_instruction','parser.py',59),
  ('ASSIGN -> ID ASSIGN_TYPE EXPRESSION','ASSIGN',3,'p_assign','parser.py',76),
  ('ASSIGN -> ID [ INTNUM ] ASSIGN_TYPE EXPRESSION','ASSIGN',6,'p_assign','parser.py',77),
  ('ASSIGN -> ID [ INTNUM , INTNUM ] ASSIGN_TYPE EXPRESSION','ASSIGN',8,'p_assign','parser.py',78),
  ('ASSIGN_TYPE -> =','ASSIGN_TYPE',1,'p_assign_type','parser.py',90),
  ('ASSIGN_TYPE -> ADDASSIGN','ASSIGN_TYPE',1,'p_assign_type','parser.py',91),
  ('ASSIGN_TYPE -> SUBASSIGN','ASSIGN_TYPE',1,'p_assign_type','parser.py',92),
  ('ASSIGN_TYPE -> DIVASSIGN','ASSIGN_TYPE',1,'p_assign_type','parser.py',93),
  ('ASSIGN_TYPE -> MULASSIGN','ASSIGN_TYPE',1,'p_assign_type','parser.py',94),
  ('EXPRESSION -> BINARY_EXPRESSION','EXPRESSION',1,'p_expression','parser.py',101),
  ('EXPRESSION -> LOGICAL_EXPRESSION','EXPRESSION',1,'p_expression','parser.py',102),
  ('EXPRESSION -> MATRIX_EXPRESSION','EXPRESSION',1,'p_expression','parser.py',103),
  ('EXPRESSION -> ( EXPRESSION )','EXPRESSION',3,'p_expression','parser.py',104),
  ('EXPRESSION -> TERM','EXPRESSION',1,'p_expression','parser.py',105),
  ('BINARY_EXPRESSION -> EXPRESSION + EXPRESSION','BINARY_EXPRESSION',3,'p_binary_expression','parser.py',125),
  ('BINARY_EXPRESSION -> EXPRESSION - EXPRESSION','BINARY_EXPRESSION',3,'p_binary_expression','parser.py',126),
  ('BINARY_EXPRESSION -> EXPRESSION * EXPRESSION','BINARY_EXPRESSION',3,'p_binary_expression','parser.py',127),
  ('BINARY_EXPRESSION -> EXPRESSION / EXPRESSION','BINARY_EXPRESSION',3,'p_binary_expression','parser.py',128),
  ('LOGICAL_EXPRESSION -> EXPRESSION > EXPRESSION','LOGICAL_EXPRESSION',3,'p_logical_expression','parser.py',145),
  ('LOGICAL_EXPRESSION -> EXPRESSION < EXPRESSION','LOGICAL_EXPRESSION',3,'p_logical_expression','parser.py',146),
  ('LOGICAL_EXPRESSION -> EXPRESSION EQORGT EXPRESSION','LOGICAL_EXPRESSION',3,'p_logical_expression','parser.py',147),
  ('LOGICAL_EXPRESSION -> EXPRESSION EQORLESS EXPRESSION','LOGICAL_EXPRESSION',3,'p_logical_expression','parser.py',148),
  ('LOGICAL_EXPRESSION -> EXPRESSION EQUAL EXPRESSION','LOGICAL_EXPRESSION',3,'p_logical_expression','parser.py',149),
  ('LOGICAL_EXPRESSION -> EXPRESSION NOTEQUAL EXPRESSION','LOGICAL_EXPRESSION',3,'p_logical_expression','parser.py',150),
  ('MATRIX_EXPRESSION -> EXPRESSION DOTADD EXPRESSION','MATRIX_EXPRESSION',3,'p_matrix_expression','parser.py',167),
  ('MATRIX_EXPRESSION -> EXPRESSION DOTSUB EXPRESSION','MATRIX_EXPRESSION',3,'p_matrix_expression','parser.py',168),
  ('MATRIX_EXPRESSION -> EXPRESSION DOTMUL EXPRESSION','MATRIX_EXPRESSION',3,'p_matrix_expression','parser.py',169),
  ('MATRIX_EXPRESSION -> EXPRESSION DOTDIV EXPRESSION','MATRIX_EXPRESSION',3,'p_matrix_expression','parser.py',170),
  ('TERM -> ID','TERM',1,'p_term','parser.py',185),
  ('TERM -> INTNUM','TERM',1,'p_term','parser.py',186),
  ('TERM -> FLOATNUM','TERM',1,'p_term','parser.py',187),
  ('TERM -> STRING','TERM',1,'p_term','parser.py',188),
  ('TERM -> MATRIX','TERM',1,'p_term','parser.py',189),
  ('TERM -> FUNCTION_CALL','TERM',1,'p_term','parser.py',190),
  ("TERM -> TERM '",'TERM',2,'p_term','parser.py',191),
  ('TERM -> - TERM','TERM',2,'p_term','parser.py',192),
  ('INTNUM_OR_ID -> INTNUM','INTNUM_OR_ID',1,'p_intnum_or_id','parser.py',208),
  ('INTNUM_OR_ID -> ID','INTNUM_OR_ID',1,'p_intnum_or_id','parser.py',209),
  ('MATRIX -> [ VECTORS ]','MATRIX',3,'p_matrix','parser.py',224),
  ('VECTORS -> VECTORS ; VECTOR','VECTORS',3,'p_vectors','parser.py',231),
  ('VECTORS -> VECTOR','VECTORS',1,'p_vectors','parser.py',232),
  ('VECTOR -> VECTOR , TERM','VECTOR',3,'p_vector','parser.py',254),
  ('VECTOR -> TERM','VECTOR',1,'p_vector','parser.py',255),
  ('FUNCTION_CALL -> FUNCTION_NAME ( TERM )','FUNCTION_CALL',4,'p_function_call','parser.py',275),
  ('FUNCTION_NAME -> ZEROS','FUNCTION_NAME',1,'p_function_name','parser.py',282),
  ('FUNCTION_NAME -> ONES','FUNCTION_NAME',1,'p_function_name','parser.py',283),
  ('FUNCTION_NAME -> EYE','FUNCTION_NAME',1,'p_function_name','parser.py',284),
  ('CONTROL_INSTRUCTION -> BREAK','CONTROL_INSTRUCTION',1,'p_control_instruction','parser.py',291),
  ('CONTROL_INSTRUCTION -> CONTINUE','CONTROL_INSTRUCTION',1,'p_control_instruction','parser.py',292),
  ('CONTROL_INSTRUCTION -> RETURN','CONTROL_INSTRUCTION',1,'p_control_instruction','parser.py',293),
  ('CONTROL_INSTRUCTION -> RETURN TERM','CONTROL_INSTRUCTION',2,'p_control_instruction','parser.py',294),
  ('PRINT_CALL -> PRINT PRINT_TERMS','PRINT_CALL',2,'p_print_call','parser.py',316),
  ('PRINT_TERMS -> PRINT_TERMS , TERM','PRINT_TERMS',3,'p_print_terms','parser.py',323),
  ('PRINT_TERMS -> TERM','PRINT_TERMS',1,'p_print_terms','parser.py',324),
  ('IF_CONDITION -> IF ( LOGICAL_EXPRESSION ) INSTRUCTION ELIF_STATEMENTS ELSE_STATEMENT','IF_CONDITION',7,'p_if_condition','parser.py',367),
  ('IF_CONDITION -> IF ( LOGICAL_EXPRESSION ) { INSTRUCTIONS } ELIF_STATEMENTS ELSE_STATEMENT','IF_CONDITION',9,'p_if_condition','parser.py',368),
  ('ELIF_STATEMENTS -> ELSEIF ( LOGICAL_EXPRESSION ) INSTRUCTION ELIF_STATEMENTS','ELIF_STATEMENTS',6,'p_if_condition','parser.py',369),
  ('ELIF_STATEMENTS -> ELSEIF ( LOGICAL_EXPRESSION ) { INSTRUCTIONS } ELIF_STATEMENTS','ELIF_STATEMENTS',8,'p_if_condition','parser.py',370),
  ('ELIF_STATEMENTS -> ELSEIF ( LOGICAL_EXPRESSION ) INSTRUCTION','ELIF_STATEMENTS',5,'p_if_condition','parser.py',371),
  ('ELIF_STATEMENTS -> ELSEIF ( LOGICAL_EXPRESSION ) { INSTRUCTIONS }','ELIF_STATEMENTS',7,'p_if_condition','parser.py',372),
  ('ELSE_STATEMENT -> ELSE INSTRUCTION','ELSE_STATEMENT',2,'p_if_condition','parser.py',373),
  ('ELSE_STATEMENT -> ELSE { INSTRUCTIONS }','ELSE_STATEMENT',4,'p_if_condition','parser.py',374),
  ('ELSE_STATEMENT -> <empty>','ELSE_STATEMENT',0,'p_if_condition','parser.py',375),
  ('FOR_LOOP -> FOR FOR_CONDITION { INSTRUCTIONS }','FOR_LOOP',5,'p_for_loop','parser.py',409),
  ('FOR_LOOP -> FOR FOR_CONDITION INSTRUCTION','FOR_LOOP',3,'p_for_loop','parser.py',410),
  ('FOR_CONDITION -> ID = INTNUM_OR_ID : INTNUM_OR_ID','FOR_CONDITION',5,'p_for_condition','parser.py',429),
  ('WHILE_LOOP -> WHILE ( LOGICAL_EXPRESSION ) { INSTRUCTIONS }','WHILE_LOOP',7,'p_while_loop','parser.py',445),
  ('WHILE_LOOP -> WHILE ( LOGICAL_EXPRESSION ) INSTRUCTION','WHILE_LOOP',5,'p_while_loop','parser.py',446),
]
